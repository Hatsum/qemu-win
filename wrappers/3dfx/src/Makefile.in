QEMU_SRC_DIR=../../../qemu-0
FXLIB=../../fxlib
GIT=$(shell git rev-parse HEAD | sed "s/\(.......\).*/\1\-/")
CROSS=
CC=$(CROSS)gcc
RC=windres
DLLTOOL=dlltool
STRIP=strip
CFLAGS=-march=x86-64-v2 -mtune=generic -O3 -fno-lto
CFLAGS+=-pipe -I$(QEMU_SRC_DIR)/hw/3dfx -I$(FXLIB) -D__REV__=\"$(GIT)\" -Wall -Werror -flto=auto -fomit-frame-pointer
LDFLAGS=-static-libgcc
LDFLAGS+=-Wl,--disable-auto-image-base,--no-seh,--dynamicbase,--nxcompat
SRCDIR=../src
TARGET1=glide.dll
TARGET2=glide2x.dll
TARGET3=glide3x.dll
GENDEF=gendef
OUTDIR=$(shell basename `pwd`)

C_OBJS:=\
	fxhook.o \
	fxlib9x.o \
	fxlibnt.o \


all: $(C_OBJS) $(TARGET1) $(TARGET2) $(TARGET3) fxdrv

fxdrv:
	@make -C ../dxe OUTDIR=$(OUTDIR)
	@make -C ../ovl OUTDIR=$(OUTDIR)
	@make -C ../drv OUTDIR=$(OUTDIR) CROSS=$(CROSS)

$(TARGET2): $(C_OBJS) glidedll.o
	@echo "  CFLAGS  $(CFLAGS)"
	@echo "  LDFLAGS $(LDFLAGS)"
	@echo "  RC  $(@:.dll=_res.o)"
	@$(RC) -Jrc -Ocoff -DGLIDE2 -o $(@:.dll=_res.o) ../src/version.rc
	@$(CC) -shared $(CFLAGS) -o $@ $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed 's/\(@[0-9]*\)@.*/\1/;s/\(^.*@[0-9]*\)/_\1\ =\ \1/' | \
		sed 's/\ ;\ Check!!!.*//' | \
		grep -e ^LIB -e ^EXP -e "\ =\ " > $(@:.dll=.def)
	@echo "  LD  $@"
	@$(CC) -shared $(CFLAGS) -o $@ $(@:dll=def) $(@:.dll=_res.o) $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed 's/\(@[0-9]*\)@.*/\1/;s/^_//' > lib$(@:dll=def)
	@$(DLLTOOL) -U -d lib$(@:dll=def) -l lib$@.a

$(TARGET1): $(C_OBJS) gl211dll.o
	@echo "  CFLAGS  $(CFLAGS)"
	@echo "  LDFLAGS $(LDFLAGS)"
	@echo "  RC  $(@:.dll=_res.o)"
	@$(RC) -Jrc -Ocoff -DGLIDE1 -o $(@:.dll=_res.o) ../src/version.rc
	@$(CC) -shared $(CFLAGS) -o $@ $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed 's/\(@[0-9]*\)@.*/\1/;s/\(^.*@[0-9]*\)/_\1\ =\ \1/' | \
		sed 's/\ ;\ Check!!!.*//' | \
		grep -e ^LIB -e ^EXP -e "\ =\ " > $(@:.dll=.def)
	@echo "  LD  $@"
	@$(CC) -shared $(CFLAGS) -o $@ $(@:dll=def) $(@:.dll=_res.o) $+ $(LDFLAGS)

$(TARGET3): $(C_OBJS) gl301dll.o
	@echo "  CFLAGS  $(CFLAGS)"
	@echo "  LDFLAGS $(LDFLAGS)"
	@echo "  RC  $(@:.dll=_res.o)"
	@$(RC) -Jrc -Ocoff -DGLIDE3 -o $(@:.dll=_res.o) ../src/version.rc
	@$(CC) -shared $(CFLAGS) -o $@ $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed 's/\(@[0-9]*\)@.*/\1/;s/\(^.*@[0-9]*\)/_\1\ =\ \1/' | \
		sed 's/\ ;\ Check!!!.*//' | \
		grep -e ^LIB -e ^EXP -e "\ =\ " > $(@:.dll=.def)
	@echo "  LD  $@"
	@$(CC) -shared $(CFLAGS) -o $@ $(@:dll=def) $(@:.dll=_res.o) $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed 's/\(@[0-9]*\)@.*/\1/;s/^_//' > lib$(@:dll=def)
	@$(DLLTOOL) -U -d lib$(@:dll=def) -l lib$@.a

$(C_OBJS):
	@if [ "$$MSYSTEM" != "MINGW32" ]; then echo "Error: MSYSTEM == $$MSYSTEM"; exit 1; fi
	@echo "  CC  $@"
	@$(CC) $(CFLAGS) -c -o $@ $(FXLIB)/$(@:.o=.c)

%.o: $(SRCDIR)/%.c
	@echo "  CC  $@"
	@$(CC) $(CFLAGS) -c -o $@ $<

clean:
	@make -C ../dxe $@
	@make -C ../ovl $@
	@rm -f *.o *.def
	@if [ ! -z "$$(find . | grep "\.dll\.a$$")" ]; then \
	    $(STRIP) --strip-unneeded *.dll *.a; \
	    sh -c 'ls -l glide*'; fi

distclean: clean
	@make -C ../dxe $@ OUTDIR=$(OUTDIR)
	@make -C ../ovl $@ OUTDIR=$(OUTDIR)
	@rm -f $(TARGET1) $(TARGET2) $(TARGET3) *.a *.vxd *.sys *.exe *.zip

